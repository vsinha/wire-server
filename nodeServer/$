var apn = require('apn');
var apnServices = require('./apnServices');

var ref;
var start = function () {
    console.log('Started group message notifications');

    ref = require('./myFirebase').adminRef;

    listenForGroupCreationAndSendNotifications();
    listenForNewGroupMessagesAndSendNotifications();
};

// notify users when they are added to a group chat
var listenForGroupCreationAndSendNotifications = function() {
    // listen for newly created groups
    watchLivingGroups( function (groupId, group) {
        var groupCreatorId = group.created_by;
        var groupName = group.name;

        console.log("watching group for new members: " + groupName);
        watchForNewMemberFromGroupId(groupId, function(newlyAddedUserId) {
            // send a notification to the added member
            if (newlyAddedUserId != groupCreatorId) {
                var notification = {
                    key: groupId + ':' + newlyAddedUserId,
                    type: "added_to_group",
                    group_id: groupId,
                    user_id: newlyAddedUserId,
                    created_at: Date.now()
                }

                // create note and send push
                getNameFromUserId(groupCreatorId, function(creatorName) {
                    var pushNote = configureGroupAddPushNote(creatorName, groupName);
                    apnServices.addNotificationToFirebaseAndSendPush(notification, pushNote,
                        function() {}
                    );
                });
            }
        });
    });
};

var configureGroupAddPushNote = function (username, groupName) {
      var note = new apn.Notification();
      note.alert = username +' added you to a group: ' + groupName;
      return note;
};

var getNameFromUserId = function(userId, callback) {
    ref.child('users/' + userId + '/public_profile/name')
    .once('value', function (snap) {
        var name = snap.val();
        callback(name);
    });
};

var watchForNewMemberFromGroupId = function (groupId, callback) {
    ref.child('group_chats/members/' + groupId).on('child_added', function (snap) {
        var userAddedToGroup = snap.name();
        console.log("new user " + userAddedToGroup + " in group " + groupId);
        callback(userAddedToGroup);
    });
};


// notify users when there are messages in group chats 
// in which they participate and they have notifications enabled
var listenForNewGroupMessagesAndSendNotifications = function() {
    watchLivingGroups( function(groupId, group) {
        watchForNewMessagesFromGroupId(groupId, group, function(newMessage) {
            // send notification to everyone in the group who is not the one
            // who created the message, and if they are subscribed to notifications
            getSubscribedUsersInGroup(groupId, function(users) {
                for (user in users) {
                    if (!users.hasOwnProperty(user)) { continue; }

                    if (user.id === newMessage.created_by) {
                        // don't send notifications to the person who created the message...
                        continue;
                    } 

                    var notification = {
                        key: groupId + ':' + user.id,
                        type: "message",
                        group_id: groupId,
                        sender_id: newMessage.created_by,
                        user_id: user.id,
                        created_at: Date.now()
                    }

                    // create note and send push
                    getNameFromUserId(newMessage.created_by, function(creatorName) {
                        var pushNote = configureGroupMessagePushNote(creatorName, groupName, 
                            newMessage.text);
                        apnServices.addNotificationToFirebaseAndSendPush(notification, pushNote,
                            function() {}
                        );
                    });
                }
            });
        });
    });
};


var configureGroupMessagePushNote = function (username, groupName, messageText) {
    var note = new apn.Notification();
    note.alert = username + ' to ' + groupName + ": " + messageText;
    return note;
}

var getSubscribedUsersInGroup = function(groupId, callback) {
    ref.child("group_chats/notifications/" + groupId).once("value", function(snap) {
        var users = snap.val();
        if (users != null) { // at least someone is subscribed for notifications
            callback(users);
        } else {
            console.log("noone subscribed to notifications");
        }
    });
};

var watchLivingGroups = function(callback) {
    ref.child("group_chats/group").on("child_added", function(snap) {
        var groups = snap.val();
        for (group in groups) {
            if (!groups.hasOwnProperty(group)) { 
                continue; }


            if (group.expired) { 
                console.log("group is expired: " + group);
                continue; 
            }


            console.log("live group : " + group);
            callback(group);
        }
    });
};

var watchForNewMessagesFromGroupId = function(groupId, group, callback) {
    if (!group.expired) {
        console.log("waiting for messages in: " + group.name);

        ref.child("group_chats/messages/" + groupId).on("child_added", function(snap) {
            var newMessage = snap.val();
            console.log("new message: " + newMessage.text);
            callback(newMessage);
        });
    } else {
        console.log("group " + groupName + " is expired (not watching for messages)");
    }
};

module.exports.start = start;
