# vim: ai:ts=2:sw=2:et!

functions:                      #reusable boolean functions
  - isLoggedIn():               auth !== null
  - createOnly():               next.exists() && !prev.exists()
  - deleteOnly():               prev.exists() && !next.exists()
  - createOrDelete():           createOnly() || deleteOnly()
  - isUser(user_id):            user_id === auth.uid
  - isMember(event_id):         root['events/members/'+ event_id +'/' + auth.uid].exists()

schema:
  # DEFINITIONS USED FOR REPEATED DATA SCHEMAS
  definitions:
    location:
      type: object
      properties:
        lat:
          type: number
        long:
          type: number
      required: [lat, long]
      additionalProperties: false

  # BEGIN APP SCHEMA
  type: object
  properties:

    events:
      type: object
      properties:

        members:
          type: object
          $event_id:
            type: object
            properties:
              ~$user_id: 
                type: boolean

        messages:
          type: object
          $event_id:
            type: object
            indexOn: .value
            properties:
              $message_id:
                type: object
                properties:
                  created_at:
                    type: string
                  location:
                    $ref: "#/definitions/location"
                  text:
                    type: string
                  user_id:
                    type: number
                    constraint: isUser(next.val())
                  type:
                    type: string
                    enum: [action, text]
                required: [created_at, location, text, user_id, type]
                additionalProperties: false

  additionalProperties: false

access:

  # Only logged in users can read group_chats they are members of
  - location: events/messages/$event_id/
    read:     isLoggedIn() && isMember($event_id)

  - location: events/
    write: true

  - location: events/
    read: true

  # Only logged in users can write group_chats they are members of
  - location: events/messages/$event_id/
    write:    isLoggedIn() && isMember($event_id)

